[{"uri":"/01trainmodel.html","title":"模型训练","tags":[],"description":"","content":"本模块通过一系列常见使用案例的简单示例来演示 SageMaker 的主要功能。您将了解一些机器学习概念以及它们与 Amazon SageMaker 的关系，并为研讨会创建 SageMaker 笔记本实例。\n"},{"uri":"/01trainmodel/0101setup.html","title":"环境搭建","tags":[],"description":"","content":"环境 AWS 账户 要完成本次研讨会，您需要一个 AWS 账户，以及该账户中的一个 AWS IAM 用户至少具有以下 AWS 服务的完全权限：\n AWS IAM Amazon S3 Amazon SageMaker  使用您自己的账户：本研讨会中的代码和说明假定一次只有一名学生正在使用给定的 AWS 账户。如果您尝试与其他学生共享帐户，您将遇到某些资源的命名冲突。您可以通过为由于冲突而无法创建的资源附加唯一后缀来解决这些问题，但说明不提供有关使此工作所需的更改的详细信息。为此研讨会使用个人账户或创建新的 AWS 账户，而不是使用组织的账户，以确保您能够完全访问必要的服务，并确保您不会留下研讨会的任何资源。\n成本：如果您的账户不到 12 个月，您将在此研讨会中启动的部分资源（但不是全部）有资格享受 AWS 免费套餐。有关更多详细信息，请参阅 AWS 免费套餐页面。免费套餐不覆盖的资源示例是某些研讨会中使用的 ml.m5.xlarge 笔记本实例。为了避免在完成研讨会后对终端节点和其他资源产生费用，请参阅清理模块。\nAWS 区域 目前，SageMaker 并非在所有 AWS 区域都可用。因此，我们建议在以下受支持的 AWS 区域之一举行此研讨会：\n 由西云数据运营的AWS(宁夏)区域 由光环新网运营的AWS(北京)区域  选择区域后，您应该为此研讨会创建所有资源，包括一个新的 Amazon S3 存储桶和一个新的 SageMaker 笔记本实例。在开始之前，请确保从 AWS 控制台右上角的下拉列表中选择您的区域。\n浏览器 我们建议您使用最新版本的 Chrome 或火狐浏览器来完成本次研讨会。\nAWS 命令行界面 要完成某些研讨会模块，您需要 AWS 命令行界面 (CLI) 和 Bash 环境。您将使用 AWS CLI 与 SageMaker 和其他 AWS 服务进行接口。\n文本编辑器 对于任何需要使用 AWS 命令行界面的研讨会模块（见上文），您还需要一个纯文本编辑器来编写 Bash 脚本。任何插入 Windows 或其他特殊字符的编辑器都可能导致脚本失败。\n"},{"uri":"/01trainmodel/0101setup/010101jupyter.html","title":"创建SageMaker笔记本实例","tags":[],"description":"","content":"创建笔记本实例 SageMaker 提供无需设置的托管Jupyter Notebook，因此您可以立即开始处理您的训练数据集。只需在 SageMaker 控制台中单击几下，您就可以创建完全托管的笔记本实例，预先加载了用于机器学习的有用库。您只需添加您的数据。\n首先，您将创建将在整个研讨会中使用的 Amazon S3 存储桶。然后，您将创建一个 SageMaker 笔记本实例，该实例将用于其他研讨会模块。\n创建 S3 存储桶 SageMaker 通常使用 S3 作为数据和模型工件的存储。在此步骤中，您将为此目的创建 S3 存储桶。要开始，请登录 AWS 管理控制台 https://console.amazonaws.cn/。\n请记住，您的存储桶名称必须在所有区域和客户中具有全球唯一性。我们建议使用像 spot-bot-exampledata-cn-northwest-1-123456789012 这样的名字（这里的\u0026quot;123456789012\u0026quot;代表您的账户ID）。如果您收到存储桶名称已存在的错误信息，请尝试添加其他数字或字符，直到找到未使用的名称。\n  在 AWS 管理控制台中，选择服务，然后在存储下选择 S3。\n  选择创建存储桶\n  为您的存储桶提供全局唯一的名称，例如 “spot-bot-exampledata-cn-northwest-1-123456789012”。(请参考使用机器人章节，【使用 cloudformation 创建 EC2 并创建 S3 Bucket】)\n  从下拉列表中选择您选择用于此研讨会的区域。\n  在对话框左下角选择创建，而不选择要从中复制设置的存储桶。\n  启动笔记本实例   在 AWS 管理控制台的右上角，确认您位于所需的 AWS 区域。选择由西云数据运营的AWS(宁夏)区域或由光环新网运营的AWS(北京)区域。\n  点击所有服务列表中的亚马逊 SageMaker。这将带您访问亚马逊 SageMaker 控制台主页。\n  要创建新的笔记本实例，请转到笔记本实例，然后单击浏览器窗口顶部的创建笔记本实例按钮。  在笔记本实例名称文本框中键入mldev，然后选择 ml.t3.medium 作为笔记本实例类型。  选择名称为SpotBot的VPC，并选择名称为SpotBot-PublicSubnet2的子网。  对于 IAM 角色，选择创建新角色，然后在生成的弹出模式中，选择您指定的 S3 存储桶下的任意 S3 存储桶。单击创建角色。  在IAM中选择角色，在角色列表中选择刚刚创建的SageMaker-ExecutionRole，并添加AmazonEC2ContainerRegistryFullAccess Policy。  访问笔记本电脑实例  等待服务器状态更改为 InService。这将需要几分钟，可能最多 10 分钟，但可能更少。  单击 “打开”。您现在将看到您的笔记本实例的 Jupyter 主页。  "},{"uri":"/01trainmodel/0103semanticbot.html","title":" 模型训练","tags":[],"description":"","content":"这里，我们来介绍一下如何使用sagemaker训练一个情感分类模型。共分为以下几步：\n 下载数据 本地训练 SageMaker训练，部署  构建ecr镜像 模型训练 查看结果 模型部署   测试调用  下载数据 #download data/model files/JupyterNotebook wget https://spot-bot-asset.s3.amazonaws.com/spot-workshop-2020/demo2.tar.gz #untar  tar -zxvf demo2.tar.gz 运行后，你可以看到对应的文件目录\n-|--bert |--data |--build_and_push.sh |--DockerFile |--train.ipynb 本地训练测试 模型b\nsource activate pytorch_p36 pip install pycocotools tensorboard cd container/mask_r_cnn python local_train.py \\  --root_train_data=\u0026#39;../../data/modelc\u0026#39; \\  --model_type=\u0026#39;modelc_sub\u0026#39; \\  --num_epochs=2 \\  --save_path=\u0026#39;../../models/modelc\u0026#39; 模型c\nsource activate pytorch_p36 pip install pycocotools tensorboard cd container/mask_r_cnn python local_train.py \\  --root_train_data=\u0026#39;../../data/modelc\u0026#39; \\  --model_type=\u0026#39;modelc_sub\u0026#39; \\  --num_epochs=2 \\  --save_path=\u0026#39;../../models/modelc\u0026#39; 训练日志 训练结果 模型产生的结果目录中，可以看到模型在测试集上的表现\n   IoU metric: bbox 结果     Average Precision (AP) @[ IoU=0.50:0.95 area= all maxDets=100 ] 0.464   Average Precision (AP) @[ IoU=0.50 area= all maxDets=100 ] 0.646   Average Precision (AP) @[ IoU=0.75 area= all maxDets=100 ] 0.526   Average Precision (AP) @[ IoU=0.50:0.95 area= small maxDets=100 ] 0.118   Average Precision (AP) @[ IoU=0.50:0.95 area=medium maxDets=100 ] 0.261   Average Precision (AP) @[ IoU=0.50:0.95 area= large maxDets=100 ] 0.572   Average Recall (AR) @[ IoU=0.50:0.95 area= all maxDets= 1 ] 0.481   Average Recall (AR) @[ IoU=0.50:0.95 area= all maxDets= 10 ] 0.658   Average Recall (AR) @[ IoU=0.50:0.95 area= all maxDets=100 ] 0.658   Average Recall (AR) @[ IoU=0.50:0.95 area= small maxDets=100 ] 0.188   Average Recall (AR) @[ IoU=0.50:0.95 area=medium maxDets=100 ] 0.470   Average Recall (AR) @[ IoU=0.50:0.95 area= large maxDets=100 ] 0.780    模型部署 predictor = estimator.deploy(1, instance_type=\u0026#39;ml.m5.large\u0026#39;, endpoint_name=\u0026#39;bert-sentiment\u0026#39;) 运行后，会看到生成了对应的endpoint\n测试调用 "},{"uri":"/categories.html","title":"Categories","tags":[],"description":"","content":""},{"uri":"/tags.html","title":"Tags","tags":[],"description":"","content":""},{"uri":"/","title":"联保智能车损 Workshop","tags":[],"description":"","content":"概述 本次分为几个部分\n 基于maskrcnn的目标检测模型训练 模型A （车损分类过滤）的部署  本次 workshop 前提 本次 workshop 建议在 宁夏 Region 使用。为了演示方便，所以本 workshop 所有的演示都会以宁夏 Region 为例。\n"}]